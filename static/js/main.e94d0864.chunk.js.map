{"version":3,"sources":["components/container/Container.module.css","components/feedback/Feedback.module.css","components/container/Container.js","components/feedback/Statistics.js","components/feedback/FeedbackOptions.js","components/feedback/Section.js","components/feedback/Notification.js","components/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Statistics","props","good","neutral","bad","total","positivePercentage","statistics","style","backgroundColor","FeedbackOptions","options","onLeaveFeedback","button","map","option","type","name","onClick","shortId","generate","Section","title","propTyprs","PropTypes","string","isRequired","node","Notification","message","App","state","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","feedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,+B,uCCA9BD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,WAAa,+B,sJCKlDC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCuCxBI,MAtCf,SAAoBC,GAClB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBAC3BC,EAAeT,IAAfS,WAER,OACE,gCACE,sCAEE,sBAAMV,UAAWU,EAAYC,MAAO,CAAEC,gBAAiB,WAAvD,SACGP,OAGL,yCAEE,sBAAML,UAAWU,EAAYC,MAAO,CAAEC,gBAAiB,WAAvD,SACGN,OAGL,qCAEE,sBAAMN,UAAWU,EAAYC,MAAO,CAAEC,gBAAiB,WAAvD,SACGL,OAGL,wCAAWC,KACX,oDAAuBC,EAAvB,W,iBCESI,MA1Bf,SAAyBT,GACvB,IAAQU,EAA6BV,EAA7BU,QAASC,EAAoBX,EAApBW,gBACTC,EAAWf,IAAXe,OAER,OACE,8BACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLnB,UAAWgB,EAEXI,KAAMF,EACNG,QAASN,EALX,SAOGG,GAJII,IAAQC,kB,gBCZvB,SAASC,EAAQpB,GACf,IAAQqB,EAAoBrB,EAApBqB,MAAO1B,EAAaK,EAAbL,SAEf,OACE,gCACE,6BAAK0B,IACJ1B,KAKPyB,EAAQE,UAAY,CAClBD,MAAOE,IAAUC,OAAOC,WACxB9B,SAAU4B,IAAUG,MAGPN,QCNAO,MAVf,SAAsB3B,GACpB,IAAQ4B,EAAY5B,EAAZ4B,QAER,OAAO,4BAAIA,KCgEEC,E,4MA9DbC,MAAQ,CACN7B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,gBAAkB,SAAAoB,GAChB,IAAMf,EAAOe,EAAEC,OAAOhB,KAEtB,EAAKiB,UAAS,SAAAC,GAAS,sBACpBlB,EAAOkB,EAAUlB,GAAQ,O,EAI9BmB,mBAAqB,WACnB,MAA+B,EAAKL,MAGpC,OAHA,EAAQ7B,KAAR,EAAcC,QAAd,EAAuBC,K,EAMzBiC,gCAAkC,WAChC,IAEMC,EAA6B,IAFlB,EAAKP,MAAd7B,KACW,EAAKkC,qBAGxB,OAAOG,KAAKC,MAAMF,I,4CAGpB,WACE,MAA+BG,KAAKV,MAA5B7B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBQ,EAAkB6B,KAAK7B,gBACvBP,EAAQoC,KAAKL,qBACb9B,EAAqBmC,KAAKJ,kCAC1B1B,EAAU+B,OAAOC,KAAKF,KAAKV,OAEjC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASA,EACTC,gBAAiBA,MAGrB,cAAC,EAAD,CAASU,MAAM,aAAf,SACa,IAAVjB,EACC,cAAC,EAAD,CAAcwB,QAAQ,sBAEtB,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAtDhBsC,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e94d0864.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3znDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__2jG89\",\"statistics\":\"Feedback_statistics__1Dpmx\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nfunction Statistics(props) {\n  const { good, neutral, bad, total, positivePercentage } = props;\n  const { statistics } = s;\n\n  return (\n    <div>\n      <p>\n        Good:\n        <span className={statistics} style={{ backgroundColor: '#00ff00' }}>\n          {good}\n        </span>\n      </p>\n      <p>\n        Neutral:\n        <span className={statistics} style={{ backgroundColor: '#ffff00' }}>\n          {neutral}\n        </span>\n      </p>\n      <p>\n        Bad:\n        <span className={statistics} style={{ backgroundColor: '#dc143c' }}>\n          {bad}\n        </span>\n      </p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport shortId from 'shortid';\nimport PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nfunction FeedbackOptions(props) {\n  const { options, onLeaveFeedback } = props;\n  const { button } = s;\n\n  return (\n    <div>\n      {options.map(option => (\n        <button\n          type=\"button\"\n          className={button}\n          key={shortId.generate()}\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Section(props) {\n  const { title, children } = props;\n\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n}\n\nSection.propTyprs = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Notification(props) {\n  const { message } = props;\n\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Container from './container/Container';\nimport Statistics from './feedback/Statistics';\nimport FeedbackOptions from './feedback/FeedbackOptions';\nimport Section from './feedback/Section';\nimport Notification from './feedback/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const name = e.target.name;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n\n    return result;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const countTotal = this.countTotalFeedback();\n    const feedbackPercentage = (good * 100) / countTotal;\n\n    return Math.round(feedbackPercentage);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const onLeaveFeedback = this.onLeaveFeedback;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const options = Object.keys(this.state);\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}